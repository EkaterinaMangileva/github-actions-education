on:
  schedule:
  - cron: "30 6 * * *"
  workflow_dispatch:
    inputs:
      qase_api_base_url:
        description: 'Qase API URL'
        required: true
      qase_report:
        description: 'Enabled/disabled reporting to Qase'
        required: true
      qase_project_code:
        description: 'Qase project code'
        required: true
      qase_run_id:
        description: 'Qase Run ID'
        required: true
      qase_run_complete:
        description: 'Qase Run autocomplete'
        required: true
env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_REPORT: ${{ inputs.qase_report }}
  QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
  QASE_RUN_ID: ${{ inputs.qase_run_id }}
  QASE_RUN_COMPLETE: ${{ inputs.qase_run_complete }}
  QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  CHAT_ID: ${{ secrets.CHAT_ID }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-php:
    runs-on: ubuntu-latest
    steps:
      - uses: qase-tms/qase-link-run@main
        env:
          QASE_API_TOKEN: ${{ env.QASE_API_TOKEN }}

  test:
    runs-on: ubuntu-latest
#    needs: download-history

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4.1.4

      - name: all tests
        # if: "github.event.inputs.deployment_target == 'all'"
        run: printenv && pytest tests/prod --alluredir=allure-results && ls allure-results
        continue-on-error: true

      - name: Store allure results
        uses: actions/upload-artifact@v4.3.1
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 2



  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v4.1.0
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4.1.4
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4.3.1
        with:
          name: _site
          path:
            _site
          retention-days: 2

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4.1.4
#      - name: Upload Pages artifact
#        uses: actions/upload-pages-artifact@v2
      # - name: Deploy to beget-page
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     password: ${{ secrets.SERVER_PASSWORD }}
      #     port: ${{ secrets.SERVER_PORT }}
      #     rm: true
      #     source: "."
      #     target: "public_html"
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
      - name: Deploy to GitHub Pages
        # id: deployment
        uses: actions/deploy-pages@v4.0.4
          
